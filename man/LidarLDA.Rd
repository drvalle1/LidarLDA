% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LidarLDA.R
\name{LidarLDA}
\alias{LidarLDA}
\title{Fit LDA model to LIDAR data}
\usage{
LidarLDA(y, n, ncomm, a.phi, b.phi, gamma, ngibbs, nburn, theta.post, phi.post)
}
\arguments{
\item{y}{P x H matrix containing the number of returns for each pixel in each height class}

\item{n}{P x H matrix containing the number of incoming light pulses for each pixel in each height class}

\item{ncomm}{maximum number of clusters}

\item{a.phi}{parameter > 0 for the prior of phi}

\item{b.phi}{parameter > 0 for the prior of phi}

\item{gamma}{parameter between 0 and 1 for the prior of the truncated stick-breaking prior}

\item{ngibbs}{number of iterations for the MCMC algorithm}

\item{nburn}{number of iterations to discard as burn in}

\item{theta.post}{should samples from the posterior distribution for theta be returned (TRUE or FALSE)? If FALSE, just the posterior mean is returned}

\item{phi.post}{should samples from the posterior distribution for phi be returned (TRUE or FALSE)? If FALSE, just the posterior mean is returned}
}
\value{
This function returns a list containing several elements:
\itemize{
\item llk:  log-likelihood for each iteration. This is a vector of size ngibbs.
\item theta: estimated relative abundance of each cluster in each pixel.
If theta.post==T, then this consists of a matrix where rows are samples
from the posterior distribution.
If theta.post==F, then this consists of a P x K matrix (K is the number of
clusters and P is the number of pixels) containing the posterior mean.
\item phi: estimated absorptance probability in each height class for each cluster.
If phi.post==T, then this consists of a matrix where rows are samples
from the posterior distribution.
If phi.post==F, then this consists of a K x H matrix (K is the number
of clusters and H is the number of height classes) containing the posterior mean.
}
}
\description{
This function uses a Gibbs sampler to fit a LDA model to LIDAR data. These data
consist of two P x H matrices (matrices y and n), where P is for pixel and H is for
height class.
}
